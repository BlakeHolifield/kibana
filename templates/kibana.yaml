apiVersion: v1
kind: Template
metadata:
  name: kibana
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: kibana
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: kibana
    strategy:
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: kibana
      spec:
        containers:
        - env:
          - name: ELASTICSEARCH_URL
            valueFrom:
              secretKeyRef:
                key: endpoint
                name: kibana-elasticsearch
          image: ${IMAGE}:${IMAGE_TAG}
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 9114
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: kibana
          ports:
          - containerPort: 9114
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 9114
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 25m
              memory: 64Mi
          securityContext: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - args:
          - --https-address=:8443
          - --provider=openshift
          - --openshift-service-account=kibana
          - --upstream=http://localhost:8080
          - --tls-cert=/etc/tls/private/tls.crt
          - --tls-key=/etc/tls/private/tls.key
          - --cookie-secret-file=/etc/proxy/secrets/session_secret
          image: ${OAUTH_IMAGE}:${OAUTH_IMAGE_TAG}
          imagePullPolicy: IfNotPresent
          name: kibana-proxy
          ports:
          - containerPort: 8443
            name: web
            protocol: TCP
          resources:
            limits:
              cpu: "500m"
              memory: "512Mi"
            requests:
              cpu: 200m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/tls/private
            name: proxy-tls
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: quay-cloudservices-pull
        - name: rh-registry-pull
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: proxy-tls
          secret:
          defaultMode: 420
          secretName: kibana-auth
    test: false
    triggers:
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/path: /metrics
      prometheus.io/port: '9114'
      prometheus.io/scrape: 'true'
    labels:
      app: kibana
    name: kibana
  spec:
    ports:
    - port: 9114
      protocol: TCP
      targetPort: 9114
    selector:
      app: kibana
    sessionAffinity: None
    type: ClusterIP
parameters:
- description: Image namespace
  name: IMAGE
  value: quay.io/cloudservices/kibana-oss
- description: Image tag
  name: IMAGE_TAG
  value: "6.5.4"
  required: true
- name: OAUTH_IMAGE
  value: registry.reg-aws.openshift.com:443/openshift3/oauth-proxy
- name: OAUTH_IMAGE_TAG
  value: v3.11.43
