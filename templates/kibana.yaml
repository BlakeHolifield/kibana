apiVersion: v1
kind: Template
metadata:
  name: kibana
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: kibana
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: kibana
    strategy:
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: kibana
      spec:
        containers:
        - env:
          - name: SERVER_NAME
            value: kibana
          - name: SERVER_HOST
            value: "localhost"
          - name: ELASTICSEARCH_HOSTS
            valueFrom:
              secretKeyRef:
                key: endpoint
                name: kibana-elasticsearch
          image: ${IMAGE}:${IMAGE_TAG}
          imagePullPolicy: Always
          name: kibana
          resources:
            limits:
              cpu: 750m
              memory: 1900Mi
            requests:
              cpu: 200m
              memory: 100Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - name: oauth2-proxy
          image: ${OAUTH_IMAGE}:${OAUTH_IMAGE_TAG}
          imagePullPolicy: Always
          args:
          - -provider=github
          - -http-address=:8443
          - -email-domain=*
          - -upstream=http://localhost:5601
          - -github-org=${GITHUB_ORG}
          - -github-team=${GITHUB_TEAM}
          - -pass-basic-auth=false
          env:
          - name: OAUTH2_PROXY_CLIENT_ID
            valueFrom:
              secretKeyRef:
                key: client-id
                name: ${GITHUB_AUTH_SECRET}
          - name: OAUTH2_PROXY_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                key: client-secret
                name: ${GITHUB_AUTH_SECRET}
          - name: OAUTH2_PROXY_COOKIE_SECRET
            valueFrom:
              secretKeyRef:
                key: cookie-secret
                name: ${GITHUB_AUTH_SECRET}
          resources:
            limits:
              cpu: 50m
              memory: 100Mi
            requests:
              cpu: 20m
              memory: 50Mi
          ports:
          - containerPort: 8443
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: https
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: quay-cloudservices-pull
        - name: rh-registry-pull
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: kibana
    name: kibana
  spec:
    ports:
    - port: 8443
      protocol: TCP
      targetPort: 8443
    selector:
      app: kibana
    sessionAffinity: None
    type: ClusterIP
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: kibana
    name: kibana
  spec:
    host: ${KIBANA_HOST}
    port:
      targetPort: 8443
    to:
      kind: Service
      name: kibana
      weight: 100
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect
parameters:
- description: Image namespace
  name: IMAGE
  value: quay.io/cloudservices/kibana-oss
- description: Image tag
  name: IMAGE_TAG
  value: "7.4.2"
  required: true
- name: OAUTH_IMAGE
  value: quay.io/pusher/oauth2_proxy
- name: OAUTH_IMAGE_TAG
  value: v4.0.0
- name: KIBANA_HOST
  value: kibana.apps.crc-stg-01.o4v9.p1.openshiftapps.com
- name: GITHUB_ORG
  value: app-sre
- name: GITHUB_TEAM
  value: crc-stg-01-cluster
- name: GITHUB_AUTH_SECRET
  value: kibana-auth-proxy
